[
    {
        "question": "What does the principle of economy of mechanism emphasize?",
        "options": ["Complex security designs are more secure", "Designs should be as simple and small as possible", "Security measures should always be hidden", "Security through obscurity"],
        "correct_answer": 2
    },
    {
        "question": "Which principle ensures that the default state of a system denies access until explicitly permitted?",
        "options": ["Open design", "Fail-safe defaults", "Least privilege", "Encapsulation"],
        "correct_answer": 2
    },
    {
        "question": "What is the key idea behind complete mediation?",
        "options": ["All accesses must be checked against the access control mechanism", "Access decisions can rely on cached permissions", "Users should have all privileges needed to perform tasks", "Only first-time accesses need to be checked"],
        "correct_answer": 1
    },
    {
        "question": "What does the principle of open design state?",
        "options": ["Security mechanisms should be secret", "Security should rely on obscurity", "Designs should be open to scrutiny and not depend on secrecy", "Encryption keys should never be shared"],
        "correct_answer": 3
    },
    {
        "question": "Separation of privilege refers to:",
        "options": ["Requiring multiple privilege attributes to access a resource", "Granting admin rights by default", "Using a single password for multiple users", "Minimizing the number of administrators"],
        "correct_answer": 1
    },
    {
        "question": "Which principle states that users and processes should only operate with the minimal privileges required?",
        "options": ["Least privilege", "Least astonishment", "Fail-safe defaults", "Separation of privilege"],
        "correct_answer": 1
    },
    {
        "question": "What does the principle of least common mechanism advocate?",
        "options": ["The system should share all resources among users", "Different users should share as few functions as possible", "All users should use the same privileges", "The security mechanism should be complex"],
        "correct_answer": 2
    },
    {
        "question": "What is the goal of psychological acceptability?",
        "options": ["Security mechanisms should be easy for users to bypass", "Security should prioritize functionality over protection", "Security should not interfere unduly with users' work", "Security must always be transparent to users"],
        "correct_answer": 3
    },
    {
        "question": "Which principle refers to encapsulating data and procedures within a protected domain?",
        "options": ["Layering", "Encapsulation", "Open design", "Least astonishment"],
        "correct_answer": 2
    },
    {
        "question": "Modularity involves:",
        "options": ["Combining all functions into a single module", "Developing secure functions as separate, protected modules", "Hiding all modules from users", "Designing modules without any restrictions"],
        "correct_answer": 2
    },
    {
        "question": "Which principle refers to using multiple, overlapping protection methods?",
        "options": ["Encapsulation", "Layering", "Separation of privilege", "Fail-safe defaults"],
        "correct_answer": 2
    },
    {
        "question": "What does the principle of least astonishment advocate?",
        "options": ["Programs should always behave in a way that surprises users", "User interfaces should behave in the most intuitive way possible", "All security mechanisms should be hidden from users", "Security through obscurity is the best practice"],
        "correct_answer": 2
    }
]
